{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UAca,CACXC,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAAUC,IACrCA,EAAIC,iBAEJ,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAIO,cAER,IAAIC,EAAQ,EAEZC,YAAW,KACT,IAAIC,EAAOC,SAASP,EAAMQ,OAE1B,MAAMC,EAAaC,aAAY,KA5BnC,IAAuBC,EAAUZ,EA6B3BK,GAAS,EACLA,GAASF,EAAOM,OAClBI,cAAcH,IA/BCE,EAiCHP,EAjCaL,EAiCNO,EAhClB,IAAIO,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUZ,IAEpBgB,EAAO,C,SAAEJ,E,MAAUZ,GAAQ,KA2BxBmB,MAAK,EAACP,SAAEA,EAAQZ,MAAEA,MACjBT,EAAA6B,OAAOC,QAAQ,uBAAqBT,QAAeZ,MAAU,IAE9DsB,OAAM,EAACV,SAAEA,EAAQZ,MAAEA,MAClBT,EAAA6B,OAAOG,QAAQ,oBAAoBX,QAAeZ,MAAU,IAGhEO,GAAQC,SAASN,EAAKO,MAAM,GAC3BP,EAAKO,MAAM,GACbR,EAAMQ,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  let count = 0;\n\n  setTimeout(() => {\n    let time = parseInt(delay.value);\n\n    const intervalId = setInterval(() => {\n      count += 1;\n      if (count == amount.value) {\n        clearInterval(intervalId);\n      }\n      createPromise(count, time)\n        .then(({ position, delay }) => {\n          Notify.success(`âœ… Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n\n      time += parseInt(step.value);\n    }, step.value);\n  }, delay.value);\n});\n"],"names":["$iQIUW","parcelRequire","formEl","document","querySelector","addEventListener","evt","preventDefault","elements","delay","delay1","step","amount","currentTarget","count","setTimeout","time","parseInt","value","intervalId","setInterval","position","clearInterval","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.04a084fc.js.map"}