{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAca,CACXC,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAAU,SAAAC,GACrCA,EAAIC,iBAEJ,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAMN,EAANM,OAGvBC,EAAQ,EAEZC,YAAW,WACT,IAAIC,EAAOC,SAASP,EAAMQ,OAE1BC,WAAaC,aAAY,WA5B7B,IAAuBC,EAAUV,GA6B3BG,GAAS,IACID,EAAOK,OAClBI,cAAcH,aA/BCE,EAiCHP,EAjCaH,EAiCNK,EAhClB,IAAIO,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUV,UAEpBc,EAAO,CAAEJ,WAAUV,S,KA2BhBiB,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUV,EAAKkB,EAALlB,MACjBZ,EAAA+B,OAAOC,QAAQ,uBAAsCC,OAAfX,EAAS,QAAYW,OAANrB,EAAM,M,IAE5DsB,OAAM,SAAAJ,G,IAAGR,EAAQQ,EAARR,SAAUV,EAAKkB,EAALlB,MAClBZ,EAAA+B,OAAOI,QAAQ,oBAAmCF,OAAfX,EAAS,QAAYW,OAANrB,EAAM,M,IAE5DK,GAAQC,SAASL,EAAKM,M,GACrBN,EAAKM,M,GACPR,EAAMQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  let count = 0;\n\n  setTimeout(() => {\n    let time = parseInt(delay.value);\n\n    intervalId = setInterval(() => {\n      count += 1;\n      if (count == amount.value) {\n        clearInterval(intervalId);\n      }\n      createPromise(count, time)\n        .then(({ position, delay }) => {\n          Notify.success(`âœ… Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      time += parseInt(step.value);\n    }, step.value);\n  }, delay.value);\n});\n"],"names":["$h6c0i","parcelRequire","formEl","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","count","setTimeout","time","parseInt","value","intervalId","setInterval","position","clearInterval","Promise","resolve","reject","Math","random","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2248d9ee.js.map"}